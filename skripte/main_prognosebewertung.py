#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Hauptprogramm f√ºr die Zeitreihen-Prognosepipeline
"""

import sys
import os

# Zentrale Konfiguration importieren und Pfade initialisieren
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, project_root)
os.chdir(project_root)

import config
config.init_project_paths()

from module.prognosebewertung import run_complete_forecasting, run_single_forecast

def main():
    """
    Hauptfunktion - f√ºhrt die Zeitreihen-Prognosepipeline durch

    KONFIGURATION: Hier k√∂nnen Sie einstellen, was ausgef√ºhrt werden soll
    """
    print("üöÄ Starte Zeitreihen-Prognosepipeline...\n")

    # ========== KONFIGURATION - WAS SOLL AUSGEF√úHRT WERDEN? ==========

    # Modus ausw√§hlen
    mode = "complete"  # √Ñndern Sie dies f√ºr andere Modi

    # M√∂gliche Modi:
    # "complete"     - Prognosen f√ºr alle St√§dte
    # "single"       - Prognose f√ºr eine spezifische Stadt

    # Falls Sie "single" verwenden, geben Sie hier die Stadt an:
    single_city = "berlin"  # Optionen: "abakan", "berlin", "angeles"

    # Anzahl der Prognosemonate
    forecast_months = 10  # √Ñndern Sie dies nach Bedarf

    # ==================================================================

    print(f"üìä Konfiguration:")
    print(f"   Modus: {mode}")
    if mode == "single":
        print(f"   Stadt: {single_city}")
    print(f"   Prognosemonate: {forecast_months}")
    print("\n" + "="*60)

    if mode == "complete":
        print("üåç F√ºhre Prognosen f√ºr alle St√§dte durch...")
        success = run_complete_forecasting(forecast_steps=forecast_months)

        if success:
            print("‚úÖ Alle Prognosen erfolgreich erstellt!")
        else:
            print("‚ö†Ô∏è Einige Prognosen sind fehlgeschlagen. Pr√ºfen Sie die Ausgabe oben.")

    elif mode == "single":
        if single_city not in config.CITIES:
            print(f"‚ùå Fehler: Stadt '{single_city}' ist nicht verf√ºgbar.")
            print(f"Verf√ºgbare St√§dte: {config.CITIES}")
            return

        print(f"üèôÔ∏è F√ºhre Prognose f√ºr {single_city.capitalize()} durch...")
        success = run_single_forecast(single_city, forecast_steps=forecast_months)

        if success:
            print(f"‚úÖ Prognose f√ºr {single_city.capitalize()} erfolgreich erstellt!")
        else:
            print(f"‚ùå Prognose f√ºr {single_city.capitalize()} fehlgeschlagen.")

    else:
        print(f"‚ùå Unbekannter Modus: {mode}")
        print("Verf√ºgbare Modi: 'complete', 'single'")
        return

    print("\nüéØ Zeitreihen-Prognosepipeline abgeschlossen!")
    print("\nüìÅ Ergebnisse finden Sie in:")
    print(f"   {os.path.join(config.OUTPUT_FOLDER, 'prognose_ergebnisse')}")

    # Zeige √úbersicht der erstellten Dateien
    output_dir = os.path.join(config.OUTPUT_FOLDER, "prognose_ergebnisse")
    if os.path.exists(output_dir):
        print("\nüìã Erstellte Dateien:")
        for file in sorted(os.listdir(output_dir)):
            print(f"   üìÑ {file}")

if __name__ == "__main__":
    main()